version: '2'

networks:
  kafka-net:
    driver: bridge
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
#      ALLOW_PLAINTEXT_LISTENER: yes
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
#      KAFKA_LISTENERS: PLAINTEXT://127.0.0.1:9092
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ADVERTISED_PORT: 9092

      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "sample_topic:3:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net
  kafdrop:
    container_name: spring-kafka-kafdrop
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    volumes:
      - /var/protobuf_desc:/var/protobuf_desc
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
      CMD_ARGS: "--message.format=PROTOBUF --protobufdesc.directory=/var/protobuf_desc"
    networks:
      - kafka-net